{"version":3,"file":"static/js/733.8a7c22c0.chunk.js","mappings":"wKAQe,SAASA,IACtB,MAAMC,GAAwCC,EAAAA,EAAAA,QAAO,MAC/CC,GAA8CD,EAAAA,EAAAA,QAAO,OACpDE,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAKC,IAAUF,EAAAA,EAAAA,UAAS,KACxBG,EAAUC,IAAeJ,EAAAA,EAAAA,UAA0B,KAU1DK,EAAAA,EAAAA,YAAU,KACRC,YAAW,KARXC,QAAQC,IAAI,UACZX,EAAeY,QAAQC,eAAe,CACpCC,SAAU,SACVC,MAAO,SAMS,GACf,IAAI,GACN,CAACf,EAAgBM,IAsBpB,MASMU,EAAeC,UACnB,IAAKb,EAAK,OACV,IAAIc,EAAgC,IAAIZ,GACxCI,QAAQC,IAAIO,GACZ,MAAMC,EAAoB,CACxBC,SAAU,OACVC,QAASjB,GAEXc,EAAaI,KAAKH,GAClBZ,EAAYW,GACZb,EAAO,IAKPa,EAAaI,KAJoB,CAC/BD,QAAS,aACTD,SAAU,QAGZb,EAAYW,GACZR,QAAQC,IAAK,kCAIb,IAAIY,SAHmBC,EAAAA,EAAMC,KAAM,iCAAuC,CACxEN,QAASf,KAEUsB,KAAY,MACjChB,QAAQC,IAAIY,GACZlB,EAAO,IACP,MAAMsB,EAAuB,CAC3BN,QAASE,EACTH,SAAU,OAEZF,EAAaU,MACbV,EAAaI,KAAKK,GAClBjB,QAAQC,IAAIL,GACZC,EAAYW,GACZhB,GAAa,EAAM,EAGrB,OACE2B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDC,SAAA,CACrEzB,EAAS0B,KAAKb,IACbc,EAAAA,EAAAA,KAAA,OACEH,UAAY,SACW,QAArBX,EAAQC,SAAqB,GAAK,oBACjCW,UAEHE,EAAAA,EAAAA,KAAA,OACEH,UAAY,oDACW,QAArBX,EAAQC,SACJ,0BACA,4CACHW,UAEFG,EAAAA,EAAAA,IAAMf,EAAQE,gBAIrBY,EAAAA,EAAAA,KAAA,OAAKE,IAAKnC,QAEZ6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,EACvDE,EAAAA,EAAAA,KAAA,SACEE,IAAKrC,EACLsC,YAAY,qBACZC,MAAOjC,EACPkC,QAAUC,GAvEEtB,WACA,KAAdsB,EAAEC,UACCvC,IACHC,GAAa,SACPc,KAEV,EAiE2ByB,CAAYF,GACjCG,SAAWH,GAAWlC,EAAOkC,EAAEI,OAAON,OACtCP,UAAU,yCAEZG,EAAAA,EAAAA,KAAA,UACEH,UAAU,GACVc,QAASA,KACP5B,IACAX,EAAO,GAAG,EACV0B,UAEFE,EAAAA,EAAAA,KAAA,OACEY,IAAI,OACJC,IAAI,0BACJC,MAAO,GACPC,OAAQ,GACRC,MAAO,CAAEC,WAAY,gBAMjC,C","sources":["pages/Dashboard/index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport parse from \"html-react-parser\";\r\ninterface IMessage {\r\n  username: string;\r\n  content: string;\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const inputRef: React.MutableRefObject<any> = useRef(null);\r\n  const messagesEndRef: React.MutableRefObject<any> = useRef(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [messages, setMessages] = useState<Array<IMessage>>([]);\r\n\r\n  const scrollToBottom = () => {\r\n    console.log(\"bottom\");\r\n    messagesEndRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToBottom();\r\n    }, 100);\r\n  }, [messagesEndRef, messages]);\r\n\r\n  //   useEffect(() => {\r\n  //     //create fake messages:\r\n  //     const createFakeMessage = () => {\r\n  //       let tempmessages = [];\r\n  //       for (let i = 0; i < 10; i++) {\r\n  //         let userMessage: IMessage = {\r\n  //           username: \"user\",\r\n  //           content: \"Hello how are you\",\r\n  //         };\r\n  //         let botMessage: IMessage = {\r\n  //           username: \"bot\",\r\n  //           content: \"Hello how are you how can I help you?\",\r\n  //         };\r\n  //         tempmessages.push(userMessage);\r\n  //         tempmessages.push(botMessage);\r\n  //       }\r\n  //       setMessages(tempmessages);\r\n  //     };\r\n  //     createFakeMessage();\r\n  //   }, []);\r\n  const handleKeyUp = async (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      if (!isLoading) {\r\n        setIsLoading(true);\r\n        await sendChatting();\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendChatting = async () => {\r\n    if (!msg) return;\r\n    let tempMessages: Array<IMessage> = [...messages];\r\n    console.log(tempMessages);\r\n    const message: IMessage = {\r\n      username: \"user\",\r\n      content: msg,\r\n    };\r\n    tempMessages.push(message);\r\n    setMessages(tempMessages);\r\n    setMsg(\"\");\r\n    const loadingMessage: IMessage = {\r\n      content: \"Loading...\",\r\n      username: \"bot\",\r\n    };\r\n    tempMessages.push(loadingMessage);\r\n    setMessages(tempMessages);\r\n    console.log(`${process.env.REACT_APP_SERVER}/chat`);\r\n    const response = await axios.post(`${process.env.REACT_APP_SERVER}/chat`, {\r\n      message: msg,\r\n    });\r\n    let reply = response.data[\"reply\"];\r\n    console.log(reply);\r\n    setMsg(\"\");\r\n    const botMessage: IMessage = {\r\n      content: reply,\r\n      username: \"bot\",\r\n    };\r\n    tempMessages.pop();\r\n    tempMessages.push(botMessage);\r\n    console.log(messages);\r\n    setMessages(tempMessages);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container flex-1 flex flex-col\">\r\n      <div className=\"overflow-y-auto flex flex-col gap-3 p-[10px] myoverflow\">\r\n        {messages.map((message) => (\r\n          <div\r\n            className={`flex ${\r\n              message.username === \"bot\" ? \"\" : \"flex-row-reverse\"\r\n            }`}\r\n          >\r\n            <div\r\n              className={`p-3 whitespace-pre-line rounded-md min-w-[20px] ${\r\n                message.username === \"bot\"\r\n                  ? \"text-white bg-[#28282C]\"\r\n                  : \"bg-[#A1DC95] text-black flex-row-reverse\"\r\n              }`}\r\n            >\r\n              {parse(message.content)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"w-full flex flex-row px-[10px] py-[30px]\">\r\n        <input\r\n          ref={inputRef}\r\n          placeholder=\"Write a message...\"\r\n          value={msg}\r\n          onKeyUp={(e: any) => handleKeyUp(e)}\r\n          onChange={(e: any) => setMsg(e.target.value)}\r\n          className=\"flex-1 bg-[#28282C] text-white p-2 \"\r\n        />\r\n        <button\r\n          className=\"\"\r\n          onClick={() => {\r\n            sendChatting();\r\n            setMsg(\"\");\r\n          }}\r\n        >\r\n          <img\r\n            alt=\"send\"\r\n            src=\"/assets/images/send.png\"\r\n            width={20}\r\n            height={20}\r\n            style={{ marginLeft: \"5px\" }}\r\n          ></img>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Dashboard","inputRef","useRef","messagesEndRef","isLoading","setIsLoading","useState","msg","setMsg","messages","setMessages","useEffect","setTimeout","console","log","current","scrollIntoView","behavior","block","sendChatting","async","tempMessages","message","username","content","push","reply","axios","post","data","botMessage","pop","_jsxs","className","children","map","_jsx","parse","ref","placeholder","value","onKeyUp","e","keyCode","handleKeyUp","onChange","target","onClick","alt","src","width","height","style","marginLeft"],"sourceRoot":""}