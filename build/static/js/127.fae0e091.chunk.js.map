{"version":3,"file":"static/js/127.fae0e091.chunk.js","mappings":"yMAGe,SAASA,EAAUC,GAA8D,IAA7D,UAAEC,EAAY,GAAE,SAAEC,KAAaC,GAA2BH,EAC3F,OACEI,EAAAA,EAAAA,KAACC,EAAAA,OAAM,CACLC,QAAQ,OACRL,UAAY,oJAAmJA,OAC3JE,EAAMD,SAETA,GAGP,CCVe,SAASK,EAAcP,GAA8D,IAA7D,UAAEC,EAAY,GAAE,SAAEC,KAAaC,GAA2BH,EAC/F,OACEI,EAAAA,EAAAA,KAACI,EAAAA,WAAU,CACTF,QAAQ,OACRL,UAAY,wGAAuGA,OAC/GE,EAAMD,SAETA,GAGP,CCOA,MAAMO,EAA6B,GAiCpB,SAASC,KACLC,EAAAA,EAAAA,MAAjB,MAEM,SAAEC,IAAaC,EAAAA,EAAAA,OAEdC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAkB,GAEtDC,EAAcA,KAClBF,GAAiB,EAAM,EAQzB,OACEG,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,2DAA0DC,SAAA,EACvEE,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAClB,UAAU,qCAAoCC,UACvDgB,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,0BAAyBC,SAAA,EACtCE,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,IAAGnB,UACVE,EAAAA,EAAAA,KAAA,OAAKkB,IAAI,0BAA0BC,IAAI,OAAOtB,UAAU,WAG1DG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0BAAyBC,SACrCO,EAAUe,KAAKC,IACdrB,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAAmBC,GAAII,EAASJ,GAAGnB,UACtCgB,EAAAA,EAAAA,MAACnB,EAAU,CACTE,UAAY,4BACVW,IAAaa,EAASJ,GAAK,gBAAkB,iBAC5CnB,SAAA,EAEHE,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,KAAMF,EAASG,SAAU3B,UAAU,YACxCwB,EAASI,UAPHJ,EAASK,cAe5BZ,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAClB,UAAU,kDAAiDC,SAAA,EACpEE,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,IAAGnB,UACVE,EAAAA,EAAAA,KAAA,OAAKkB,IAAI,0BAA0BC,IAAI,OAAOtB,UAAU,WAG1DG,EAAAA,EAAAA,KAACG,EAAc,CAACwB,QAASA,IAAMhB,GAAiB,GAAMb,UACpDE,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,KAAK,WAAW1B,UAAU,eAGlCG,EAAAA,EAAAA,KAAC4B,EAAAA,OAAM,CACLC,KAAMnB,EACNoB,QAASjB,EACThB,UAAU,kBAAiBC,UAE3BE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBC,UAClCgB,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,oCAAmCC,SAAA,EAChDE,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,IAAGnB,UACVE,EAAAA,EAAAA,KAAA,OAAKkB,IAAI,0BAA0BC,IAAI,OAAOtB,UAAU,WAG1DG,EAAAA,EAAAA,KAACG,EAAc,CAACwB,QAASd,EAAYf,UACnCE,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,KAAK,mBAAmB1B,UAAU,0BAoCxD,C","sources":["components/buttons/TextButton.tsx","components/buttons/TextIconButton.tsx","layouts/Navbar.tsx"],"sourcesContent":["import { Button } from \"@material-tailwind/react\";\r\nimport { IPropsOfComponent } from \"../../utils/interfaces\";\r\n\r\nexport default function TextButton({ className = '', children, ...others }: IPropsOfComponent) {\r\n  return (\r\n    <Button\r\n      variant=\"text\"\r\n      className={`rounded-md normal-case text-sm font-normal text-gray-100 px-4 py-2 hover:bg-gray-100 hover:bg-opacity-10 active:bg-gray-100 active:bg-opacity-10 ${className}`}\r\n      {...others}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}","import { IconButton } from '@material-tailwind/react'\r\nimport { IPropsOfComponent } from '../../utils/interfaces'\r\n\r\nexport default function TextIconButton({ className = '', children, ...others }: IPropsOfComponent) {\r\n  return (\r\n    <IconButton\r\n      variant=\"text\"\r\n      className={`w-8 h-8 p-0 text-white hover:bg-gray-100 hover:bg-opacity-10 active:bg-gray-100 active:bg-opacity-10 ${className}`}\r\n      {...others}\r\n    >\r\n      {children}\r\n    </IconButton>\r\n  )\r\n}","import { useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { Drawer, List, ListItem } from \"@material-tailwind/react\";\r\nimport Container from \"../components/containers/Container\";\r\nimport TextButton from \"../components/buttons/TextButton\";\r\nimport TextIconButton from \"../components/buttons/TextIconButton\";\r\nimport FilledButton from \"../components/buttons/FilledButton\";\r\n\r\n// -----------------------------------------------------------------------------------------\r\n\r\ninterface INavLink {\r\n  id: number;\r\n  label: string;\r\n  iconName: string;\r\n  to: string;\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------\r\n\r\nconst NAV_LINKS: Array<INavLink> = [\r\n  // {\r\n  //   id: 4,\r\n  //   label: 'Dashboard',\r\n  //   iconName: 'material-symbols:dashboard',\r\n  //   to: '/dashboard'\r\n  // },\r\n  // {\r\n  //   id: 1,\r\n  //   label: 'Lending',\r\n  //   iconName: 'cryptocurrency:lend',\r\n  //   to: '/lending'\r\n  // },\r\n  // {\r\n  //   id: 2,\r\n  //   label: 'Swap',\r\n  //   iconName: 'ph:swap-bold',\r\n  //   to: '/swap'\r\n  // },\r\n  // {\r\n  //   id: 3,\r\n  //   label: 'Bridge',\r\n  //   iconName: 'mdi:bridge',\r\n  //   to: '/bridge'\r\n  // },\r\n  // {\r\n  //   id: 5,\r\n  //   label: 'Trading',\r\n  //   iconName: 'ep:histogram',\r\n  //   to: '/trading'\r\n  // },\r\n];\r\n\r\nexport default function Navbar() {\r\n  const navigate = useNavigate();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const [visibleDrawer, setVisibleDrawer] = useState<boolean>(false);\r\n\r\n  const closeDrawer = () => {\r\n    setVisibleDrawer(false);\r\n  };\r\n\r\n  const navigateToPage = (to: string) => {\r\n    navigate(to);\r\n    closeDrawer();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"sticky top-0 bg-gray-900 border-b border-gray-800 z-[99]\">\r\n      <Container className=\"justify-between p-4 hidden lg:flex\">\r\n        <div className=\"flex items-center gap-8\">\r\n          <Link to=\"/\">\r\n            <img src=\"/assets/images/logo.png\" alt=\"logo\" className=\"w-8\" />\r\n          </Link>\r\n\r\n          <div className=\"flex items-center gap-4\">\r\n            {NAV_LINKS.map((linkItem) => (\r\n              <Link key={linkItem.id} to={linkItem.to}>\r\n                <TextButton\r\n                  className={`flex items-center gap-2 ${\r\n                    pathname === linkItem.to ? \"text-gray-100\" : \"text-gray-500\"\r\n                  }`}\r\n                >\r\n                  <Icon icon={linkItem.iconName} className=\"text-lg\" />\r\n                  {linkItem.label}\r\n                </TextButton>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n\r\n      <Container className=\"justify-between items-center p-4 flex lg:hidden\">\r\n        <Link to=\"/\">\r\n          <img src=\"/assets/images/logo.png\" alt=\"logo\" className=\"w-8\" />\r\n        </Link>\r\n\r\n        <TextIconButton onClick={() => setVisibleDrawer(true)}>\r\n          <Icon icon=\"ion:menu\" className=\"text-xl\" />\r\n        </TextIconButton>\r\n\r\n        <Drawer\r\n          open={visibleDrawer}\r\n          onClose={closeDrawer}\r\n          className=\"p-4 bg-gray-900\"\r\n        >\r\n          <div className=\"flex flex-col gap-8\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <Link to=\"/\">\r\n                <img src=\"/assets/images/logo.png\" alt=\"logo\" className=\"w-8\" />\r\n              </Link>\r\n\r\n              <TextIconButton onClick={closeDrawer}>\r\n                <Icon icon=\"akar-icons:cross\" className=\"text-xl\" />\r\n              </TextIconButton>\r\n            </div>\r\n\r\n            {/* <List>\r\n              {NAV_LINKS.map(linkItem => (\r\n                <ListItem key={linkItem.id} onClick={() => navigateToPage(linkItem.to)} className={`gap-4 ${pathname === linkItem.to ? 'text-gray-100' : 'text-gray-500'}`} disabled={!isConnected}>\r\n                  <Icon icon={linkItem.iconName} className=\"text-lg\" />\r\n                  {linkItem.label}\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n\r\n            <List>\r\n              {isConnected ? chain?.id === Number(chainId) ? (\r\n                <ListItem className=\"gap-4 text-gray-100\" onClick={() => disconnect()}>\r\n                  <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\r\n                  Disconnect\r\n                </ListItem>\r\n              ) : (\r\n                <ListItem className=\"gap-4 text-gray-100\" onClick={() => switchNetwork?.(Number(chainId))}>\r\n                  <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\r\n                  Switch network\r\n                </ListItem>\r\n              ) : (\r\n                <ListItem className=\"gap-4 text-gray-100\" onClick={() => open()}>\r\n                  <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\r\n                  Connect Wallet\r\n                </ListItem>\r\n              )}\r\n            </List> */}\r\n          </div>\r\n        </Drawer>\r\n      </Container>\r\n    </nav>\r\n  );\r\n}\r\n"],"names":["TextButton","_ref","className","children","others","_jsx","Button","variant","TextIconButton","IconButton","NAV_LINKS","Navbar","useNavigate","pathname","useLocation","visibleDrawer","setVisibleDrawer","useState","closeDrawer","_jsxs","Container","Link","to","src","alt","map","linkItem","Icon","icon","iconName","label","id","onClick","Drawer","open","onClose"],"sourceRoot":""}