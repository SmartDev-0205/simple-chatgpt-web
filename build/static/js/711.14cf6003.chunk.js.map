{"version":3,"file":"static/js/711.14cf6003.chunk.js","mappings":"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","sources":["../node_modules/@iconify/react/dist/iconify.mjs"],"sourcesContent":["import React from 'react';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: (s) => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    WebkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG/SPAN, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n        ref,\n    };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')),\n        };\n        return React.createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return React.createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon,\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (!data) {\n            // Icon data is not available\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                if (data !== null) {\n                    // Icon was not loaded\n                    this._loading = {\n                        name: icon,\n                        abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                    };\n                }\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: true,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n"],"names":["matchIconName","stringToIcon","value","validate","allowSimpleName","provider","arguments","length","undefined","colonSeparated","split","slice","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconData","parent","child","obj1","obj2","mergeIconTransformations","key","internalGetIconData","data","tree","icons","aliases","create","currentProps","parse","forEach","parseIconSet","callback","names","not_found","Array","push","resolved","keys","concat","resolve","getIconsTree","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","getStorage","providerStorage","missing","Set","newStorage","addIconSet","storage","add","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addCollection","added","err","addIconToStorage","addIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","regex","randomPrefix","Date","now","toString","random","counter","replaceIDs","ids","exec","suffix","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","fetchModule","detectFetch","fetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","calculateMaxLength","type","send","params","getPath","iconsList","URLSearchParams","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","removeCallback","storages","items","loaderCallbacks","filter","row","idCounter","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","floor","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","indexOf","moduleResponse","queriesPending","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","target","redundancy","api","cached","cachedReundancy","getRedundancyCache","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","storeInBrowserStorage","store","set","delete","from","stringify","lastValue","updateLastModified","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","pendingCallbacksFlag","hasPending","oldLength","pending","loaded","updateCallbacks","loadIcons","cleanedIcons","listToIcons","sortedIcons","sort","a","b","localeCompare","lastIcon","localStorage","sortIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","console","loadNewIcons","pendingSources","bind","storeCallback","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","policy","cleanUpInnerHTML","html","trustedTypes","createPolicy","createHTML","s","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","WebkitMask","mask","background","inlineDefaults","fixSize","render","props","ref","defaultProps","customisations","valueType","mergeCustomisations","mode","style","customStyle","componentProps","color","fullIcon","fullCustomisations","box","transformations","tempValue","rotation","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","isUnsetKeyword","viewBox","iconToSVG","renderAttribs","verticalAlign","localCounter","dangerouslySetInnerHTML","__html","React","useMask","renderAttribsHTML","iconToHTML","svg","encodeSVGforURL","svgToData","document","IconifyPreload","preload","e","IconifyProviders","providers","IconComponent","constructor","super","this","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","children","newProps","className","_inline","_ref","Icon"],"sourceRoot":""}